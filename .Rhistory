install.packages("devtools", dependencies = TRUE)
install.packages("devtools")
library(devtools)
library(versions)
available.packages("processx")
available.versions("processx")
install.versions("processx", versions = "3.7.0")
library(devtools)
1:3 |> rnorm()
1:3 |> rnorm
1:3 |> rnorm(.)
1:3 |> rnorm(_)
1:3 |> rnorm(n=_)
1:3 |> rnorm(n=.)
1:3 |> `+` 3
1:3 |> (`+`) 3
1:3 |> (`+` 3)
1:3 |> (. `+` 3)
1:3 |> (_ `+` 3)
1:3 |> base::`+` 3
library(usethis)
ls("package:usethis")
usethis::use_git_config(
# your name
user.name = "duhi23",
# your email used in your GitHub account
user.email = "diego.21.phs@hotmail.com"
)
usethis::use_git_config(
# your name
user.name = "duhi23",
# your email used in your GitHub account
user.email = "diego.21.phs@hotmail.com"
)
usethis::create_github_token()
gitcreds::gitcreds_set()
usethis::git_sitrep()
use_git()
usethis::use_git()
usethis::use_github()
ls("package:dplyr")
ls("package:ggplot2")
ls("package:data.table")
ls("package:lubridate")
library(lubridate)
ls("package:lubridate")
library(stringr)
ls("package:stringr")
library(tidyr)
table4a
#| echo: false
#| include: false
library(tidyverse)
starwars
#| echo: false
#| include: false
library(tidyverse)
data("starwars")
#| eval: true
starwars |> filter(eye_color == "brown")
starwars
starwars |> filter(eye_color == "brown")
#| eval: true
starwars %>%  filter(eye_color == "brown")
starwars
starwars
starwars <- select(1:10)
starwars <- starwars %>% select(1:10)
#| eval: true
starwars %>%  filter(eye_color == "brown")
starwars
starwars
#| eval: true
starwars |>  dplyr::filter(eye_color == "brown")
#| code-line-numbers: "1"
a <- 3
#| code-line-numbers: "2"
a <- 3
b <- 5
#| code-line-numbers: "3"
a <- 3
b <- 5
a + b
library(stringr)
ls("package:stringr")
#| error: true
"a" + 1
#| warning: true
# Ejecuta la orden pero el resultado es NaN, **Not A Number**, un valor que no existe
sqrt(-1)
#| code-fold: true
a <- -1
edad <- 33
nombre <- "Diego"
soltero <- FALSE
#| echo: false
#| include: false
a <- 5
b <- 2
a + b
class(a)
a^2
nombre <- "Diego"
class(nombre)
#| error: true
nombre + 1 # error al sumar número a texto
paste("Diego", "Huaraca")
paste("Diego", "Huaraca", sep = "*")
paste("Diego", "Huaraca", sep = " - ")
paste0("Diego", "Huaraca")
#| echo: false
library(glue)
edad <- 33
glue("La edad es de {edad} años")
unidades <- "días"
glue("La edad es de {edad * 365} {unidades}")
soltero <- TRUE # ¿Es soltero? --> SÍ
class(soltero)
#| error: true
TRUE + 1
"TRUE" + 1
nombre <- "María"
nombre == "Julia"
nombre != "Julia"
edad <- 38
edad < 32 # ¿Es la edad menor de 32 años?
edad >= 38
fecha_char <- "2021-04-21"
#| error: true
fecha_char + 1
library(lubridate) # instala si no lo has hecho
fecha <- as_date("2023-03-28")
fecha + 1
class(fecha)
today()
now()
fecha <- today()
year(fecha)
month(fecha)
#| code-fold: true
edad <- 33
nombre <- "Javi"
#| code-fold: true
hermanos <- TRUE
library(lubridate)
fecha_nacimiento <- as_date("1989-09-10")
edades <- c(33, 27, 60, 61)
edades
edades
length(edades)
c(edades, edades, 8)
seq(1, 31)
1:5
7:-3
seq(1, 7, by = 0.5) # secuencia desde 1 a 7 de 0.5 en 0.5
seq(1, 50, l = 7) # secuencia desde 1 a 50 de longitud 7
rep(0, 7) # vector de 7 ceros
frase <- "Me llamo Diego"
frase
length(frase)
vector <- c("Me", "llamo", "Diego")
vector
length(vector)
c(1, 2, "Diego", "3", TRUE)
c(3, 4, TRUE, FALSE)
x <- c(1, 3, 5, 7)
x + 1
x * 2
3 * x - 5
x/2
x <- c(2, 4, 6)
y <- c(1, 3, 5)
x + y
z <- c(1, 3, 5, 7)
x + z
x <- c(15, 20, 31, 27, 15, 29)
x < 22
y <- c(15, 20, NA, 31, 27, 7, 29, 10)
y < 22
x < 30 & x > 15
x < 30 | x > 15
any(x < 30)
all(x < 30)
x <- c(4, -2, 3, -7)
sum(x)
x <- c(4, -2, 3, NA, -7)
sum(x)
sum(x, na.rm = TRUE)
x <- c(-5, 7, 2, 4, 6, 9, -1)
# Número de elementos que cumplen la condición
sum(x < 3)
# Promedio de elementos que cumplen la condición
mean(x<3)
x <- c(165, 170, 181, 191, 150, 155, 167, NA, 173, 177)
mean(x, na.rm = TRUE)
x <- c(165, 170, 181, 191, 150, 155, 167, 173, 177)
median(x)
quantile(x) # por defecto percentiles 0-25-50-75-100
quantile(x, probs = seq(0.1, 0.9, by = 0.1)) # deciles
edades <- c(20, 30, 33, NA, 61)
edades[3] # accedemos a la edad de la tercera persona
y <- c("hola", "qué", "tal", "estás", "?")
y[c(1:2, 4)] # primer, segundo y cuarto elemento
y
y[-2]
edades <- c(15, 21, 30, 17, 45)
nombres <- c("Javier", "María", "Laura", "Julia", "Luis")
nombres[edades < 18] # nombres de los menores de edad
edades <- c(81, 7, 25, 41, 65, 20, 33, 23, 77)
sort(edades)
sort(edades, decreasing = TRUE)
order(x)
x[order(x)]
estaturas <- c(150, 160, 170, 180)
pesos <- c(60, 70, 80, 90)
cbind(estaturas, pesos)
#| code-line-numbers: "4"
edades <- c(14, 24, NA)
soltero <- c(TRUE, NA, FALSE)
nombres <- c("javi", "laura", "lucía")
cbind(edades, soltero, nombres)
#| code-line-numbers: "1"
tabla <- data.frame(edades, soltero, nombres)
tabla
tabla
class(tabla)
library(lubridate)
tabla <- data.frame("edad" = edades, "estado" = soltero, "nombre" = nombres,
"f_nacimiento" = as_date(c("1989-09-10", "1992-04-01", "1980-11-27")))
tabla
tabla[2, ]  # segunda fila (todas sus variables)
tabla[, 3]  # tercera columna (de todos los individuos)
tabla[2, 1]  # primera característica de la segunda persona
names(tabla)
dim(tabla)
tabla[c(1, 3), "nombre"]
#| error: true
data.frame("estatura" = c(1.7, 1.8, 1.6), "peso" = c(80, 75, 70),
"IMC" = peso / (estatura^2))
library(tibble)
tibble("estatura" = c(1.7, 1.8, 1.6), "peso" = c(80, 75, 70),
"IMC" = peso / (estatura^2))
tabla <- tibble("estatura" = c(1.7, 1.8, 1.6), "peso" = c(80, 75, 70),
"IMC" = peso / (estatura^2))
tabla
#| warning: true
tabla$invent
tribble(~colA, ~colB,
"a",   1,
"b",   2)
library(tidyr)
table4a
table4a
table4a |>
pivot_longer(cols = c("1999", "2000"), names_to = "year", values_to = "cases")
table4a |>
pivot_longer(cols = c("1999", "2000"),
names_to = "year",
values_to = "cases")
table2
#| echo: false
table2
table2 |>  pivot_wider(names_from = type, values_from = count)
table3
table3
table3 |> separate(rate, into = c("cases", "pop"))
table3 |> separate(rate, into = c("cases", "pop"))
table3 |> separate(rate, into = c("cases", "pop"), convert = TRUE)
table5
table5
table5 |> unite(col = year_completo, century, year, sep = "")
#| echo: false
#| include: false
library(tidyverse)
data("starwars")
help(reframe)
library(dplyr)
help(reframe)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr", dependencies = TRUE)
install.packages("dplyr", dependencies = TRUE)
library(dplyr)
help(reframe)
help(drop_na)
ls("package:dplyr")
sessionInfo()
library(versions)
available.versions("dplyr")
library(dplyr)
install.packages("devtools", dependencies = TRUE)
help(filter)
